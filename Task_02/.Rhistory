install.packages("swirl")
library(swirl)
swirl()
x <- 5
stop()
exit()
q()
x <- 5
y <- 10
x + y
logan <- 6
logan * y
logan <- runif(100000)
hist(logan)
y <- 5*logan + 5 + runif(length(logan), min=-0.01,max=0.01)
plot(logan, y)
install.packages("swirl")
library(swirl)
swirl()
file.rename(task02.r)
file.rename(Untitled1, task02.r)
setwd(' ')
setwd('')
setwd('/Users/lcb/Desktop/Evolution/Tasks/Task_02')
Data <- read.csv('http://jonsmitchell.com/data/beren.csv', stringsAsFactors=F)
write.csv(Data, 'rawdata.csv', quote=F)
Data
options(max.print=1000000)
Data
Data
View(Data)
View(Data)
setwd('/Users/lcb/Desktop/Evolution/Tasks/Task_02')
Data <- read.csv('http://jonsmitchell.com/data/beren.csv', stringsAsFactors=F)
write.csv(Data, 'rawdata.csv', quote=F)
Data
options(max.print=1000000)
Data
setwd('/Users/lcb/Desktop/Evolution/Tasks/Task_02')
Data <- read.csv('http://jonsmitchell.com/data/beren.csv', stringsAsFactors=F)
write.csv(Data, 'rawdata.csv', quote=F)
Data
head(Data)
setwd('Users/lcb/Desktop/Evolution/Tasks/Task_02')
beren3
beren_new.csv
setwd('/Users/lcb/Desktop/Evolution/Tasks/Task_02')
Data <- read.csv('http://jonsmitchell.com/data/beren.csv', stringsAsFactors=F)
write.csv(Data, 'rawdata.csv', quote=F)
Data
options(max.print=1000000)
length(Data)
nrow(Data)
ncol(Data)
colnames(Data)
head(Data)
Data[1,]
Data [2,]
Data[1:3,]
Data[1:3, 4]
Data[1:5, 1:3]
#Data[257,]
Feeds <- which(Data[,9] == 'bottle')
berenMilk <- Data[Feeds,]
head(berenMilk)
nrow(berenMilk)
#322 rows in 'berenMilk'. Each row represents a time when Beren was fed milk from a bottle.
Feeds <- which(Data[, 'event'] == 'bottle')
Feeds
Feeds <- which(Data$event == 'bottle')
Feeds
head(Feeds)
Data[Feeds,]
#Each of these three ways of finding the bottle events are the same. I convinced myself they were all the same by realizing that they are all different methods of identifying the same column to R.
dayID <- apply(Data, 1, function(x) paste(x[1:3], collapse='-'))
dateID <- sapply(dayID, as.Date, format = "%Y-%m-%d", origin = "2019-04-18")
Data$age <- dateID - dateID[which(Data$event == 'birth')]
head(Data)
beren2 <- Data
beren3 <- beren2[order(beren2$age),]
head(beren2)
head(beren3)
#Age column was added in "beren2", data was sorted by age, with the first even happening when Beren was 2 days old, in "beren3".
write.csv(beren3, 'beren_new.csv', quote=F, row.names=FALSE)
Feeds <- which(beren3$event == "bottle")
avgMilk <- mean(beren3$value[Feeds])
avgMilk
avgFeed <- tapply(beren3$value[Feeds], beren3$age[Feeds], mean)
avgFeed
head(avgFeed)
avgFeed[1,]
avgFeed[1:3]
avgFeed[4:33]
length(avgFeed)
nrow(avgFeed)
ncol(avgFeed)
avgFeed[1:5, 1:3]
varFeed <- tapply(beren3$value[Feeds], beren3$age[Feeds], var)
totalFeed <- tapply(beren3$value[Feeds], beren3$age[Feeds], sum)
numFeeds <- tapply(beren3$value[Feeds], beren3$age[Feeds], length)
varFeed
totalFeed
numFeeds
?cor
cor(beren3$value[Feeds], beren3$age[Feeds])
cor.test(beren3$value[Feeds], beren3$age[Feeds])
berenCor <- cor.test(beren3$value[Feeds], beren3$age[Feeds])
summary(berenCor)
berenCor
berenANOVA <- aov(beren3$value[Feeds] ~ beren3$caregiver[Feeds])
berenANOVA
?aov
boxplot(beren3$value[Feeds] ~ beren3$caregiver[Feeds], xlab= "who gave the bottle", ylab= "amount of milk consumed (oz)")
?par
#"tck=-0.01" means you set the size of the tick marks of the graph to 0.01. The negative sign means the tick marks will be outside of the actual graph space.
par(las=1, mar=c(5, 5, 1, 1), mgp=c(2, 0.5, 0), tck=-0.01)
plot(as.numeric(names(totalFeed)), totalFeed, type="b", pch=16, xlab="age in days", ylab="ounces of milk")
abline(h=mean(totalFeed), lty=2, col='red')
pdf("rO2b-totalMilkByDay.pdf", height = 4, width = 4)
par(las=1, mar=c(5, 5, 1, 1), mgp=c(2, 0.5, 0), tck=-0.01)
plot(as.numeric(names(totalFeed)), totalFeed, type="b", pch=16, xlab="age in days", ylab="ounces of milk")
abline(h=mean(totalFeed), lty=2, col='red')
dev.off()
source("http://jonsmitchell.com/code/plotFxn02b.R")
pdf("r02b-cumulativeMilkByTime.pdf", height=4, width=4)
unique(beren3$event)
beren3
colnames(beren3)
unique(beren3$event)
head(beren3)
beren3[1:50]
beren3[1:]
beren3[1:50,]
which(beren3$event == "trait_head_circum")
berenHeadGrowth <- which(beren3$event == "trait_head_circum")
Data[berenHeadGrowth,]
beren3[berenHeadGrowth,]
cor.test(beren3$value[berenHeadGrowth], beren3$age[berenHeadGrowth])
which(beren3$event == "nap")
beren4 <- which(beren3$event == "nap")
beren4
beren3$value[beren4]
head(beren4)
head(berenMilk)
Feeds
berenNaps <- Data[beren4,]
berenNaps
berenNaps <- beren3[beren4,]
berenNaps
berenNaps$duration_hours = berenNaps$end_hour - berenNaps$start_hour
berenNaps
berenNaps$duration_hours = berenNaps$end_minute - berenNaps$start_minute
berenNaps
berenNaps$duration_hours = berenNaps$end_hour - berenNaps$start_hour
berenNaps$duration_minutes = berenNaps$end_minute - berenNaps$start_minute
berenNaps
berenNaps$duration_hours <- berenNaps$duration_hours*60
berenNaps
berenNaps$TOTAL_NAP_DURATION <- berenNaps$duration_hours + berenNaps$duration_minutes
berenNaps
berenNaps$Total_Mins <- berenNaps$duration_hours + berenNaps$duration_minutes
berenNaps
df = subset(berenNaps, select = -c(TOTAL_NAP_DURATION))
berenNaps
Total_Mins <- berenNaps$Total_Mins
age <- berenNaps$age
plot(age, Total_Mins)
title(Beren Time Spent Napping Over Time)
totalFeed
NapTimePerDay <- tapply(berenNaps$value[Total_Mins], berenNaps$age[Total_Mins], sum)
NapTimePerDay
NapTimePerDay <- tapply(berenNaps$value[Total_Mins], berenNaps$age[berenNaps$value[Total_Mins]], sum)
NapTimePerDay
totalFeed
Naps <- which(berenNaps$event == "nap")
NapTimePerDay <- tapply(berenNaps$value[Naps], berenNaps$age[Naps], sum)
NapTimePerDay
NapTimePerDay <- tapply(berenNaps$value[Total_Mins], berenNaps$age[Naps], sum)
NapTimePerDay
mean(berenNaps$value[Naps])
avgMilk
mean(berenNaps$Total_Mins[Naps])
Naps
mean(berenNaps$age[Naps])
NapTimePerDay <- tapply(berenNaps$Total_Mins[Naps], berenNaps$age[Naps], sum)
NapTimePerDay
par(las=1, mar=c(5, 5, 1, 1), mgp=c(2, 0.5, 0), tck=-0.01)
plot(as.numeric(names(NapTimePerDay)), NapTimePerDay, type="b", pch=16, xlab="Age (Days)"), ylab="Time Spent Sleeping per Day (mins)")
plot(as.numeric(names(NapTimePerDay)), NapTimePerDay, type="b", pch=16, xlab="Age in Days", ylab="Time Napped per Day in Minutes")
cor.test(berenNaps$Total_Mins[Naps], berenNaps$age[Naps])
berenNaps$StartTime <- paste(berenNaps$start_hour, berenNaps$start_minute)
berenNaps
TimeSleptvsDay <- plot(as.numeric(names(NapTimePerDay)), NapTimePerDay, type="b", pch=16, xlab="Age in Days", ylab="Time Napped per Day in Minutes")
pdf("r02b-TimeNappedVsDay.pdf", height=4, width=4)
par(las=1, mar=c(5, 5, 1, 1), mgp=c(2, 0.5, 0), tck=-0.01)
plot(as.numeric(names(NapTimePerDay)), NapTimePerDay, type="b", pch=16, xlab="Age in Days", ylab="Time Napped per Day in Minutes")
abline(h=mean(NapTimePerDay), lty=2, col='red')
dev.off()
cor.test(berenNaps$StartTime[Naps], berenNaps$Total_Mins[Naps])
berenNaps$StartTime <- as.numeric(as.character(berenNaps$StartTime))
berenNaps
berenNaps$StartTime <- paste(berenNaps$start_hour, berenNaps$start_minute)
berenNaps
berenNaps$StartTime2 <- transform(berenNaps, StartTime2=paste0(start_hour, start_minute))
berenNaps
cor.test(berenNaps$StartTime2.StartTime2[Naps], berenNaps$StartTime2.Total_Mins[Naps])
berenNaps$StartTime2.StartTime2 <- as.numeric(as.character(berenNaps$StartTime2.StartTime2))
cor.test(as.numeric(berenNaps$StartTime2.StartTime2[Naps]), berenNaps$StartTime2.Total_Mins[Naps])
cor.test(as.numeric(berenNaps$StartTime2.StartTime2[Naps]), as.numeric(berenNaps$StartTime2.Total_Mins[Naps]))
cor.test(berenNaps$StartTime2[Naps], berenNaps$Total_Mins[Naps])
berenNaps <- as.numeric(berenNaps$StartTime2.StartTime2)
berenNaps
berenNaps <- beren3[beren4,]
berenNaps
berenNaps$duration_minutes = berenNaps$end_minute - berenNaps$start_minute
berenNaps$duration_hours <- berenNaps$duration_hours*60
berenNaps$Total_Mins <- berenNaps$duration_hours + berenNaps$duration_minutes
Total_Mins <- berenNaps$Total_Mins
age <- berenNaps$age
Naps <- which(berenNaps$event == "nap")
NapTimePerDay <- tapply(berenNaps$Total_Mins[Naps], berenNaps$age[Naps], sum)
