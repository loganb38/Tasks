install.packages("swirl")
library(swirl)
swirl()
x <- 5
stop()
exit()
q()
x <- 5
y <- 10
x + y
logan <- 6
logan * y
logan <- runif(100000)
hist(logan)
y <- 5*logan + 5 + runif(length(logan), min=-0.01,max=0.01)
plot(logan, y)
install.packages("swirl")
library(swirl)
swirl()
trueMean1 <- 5
trueSD1 <- 5
population1 <- rnorm(1e6, trueMean1, trueSD1)
trueMean2 <- 4
trueSD2 <- 5
population2 <- rnorm(1e6, trueMean2, trueSD2)
Size <- 50
Sample1 <- sample(population1, Size)
Sample2 <- sample(population2, Size)
Sample1
Sample2
boxplot(Sample1, Sample2)
source("http://jonsmitchell.com/code/simFxn04.R")
MatGrandma <- makeFounder("grandma_mom")
MatGrandpa <- makeFounder("grandpa_mom")
PatGrandma <- makeFounder("grandma_da")
PatGrandpa <- makeFounder("grandpa_da")
MatGrandma
head(MatGrandma)
nrow(MatGrandma)
head(MatGrandpa)
head(PatGrandma)
Alan <- makeBaby(PatGrandma, PatGrandpa)
Brenda <- makeBaby(MatGrandma, MatGrandpa)
Focus <- makeBaby(Brenda, Alan)
ToMom <- length(grep("mom", Focus)) / length(Focus)
ToMomMom <- length(grep("grandma_mom", Focus)) / length(Focus)
ToMomDad <- length(grep("grandpa_mom", Focus)) / length(Focus)
ToDadMom <- length(grep("grandma_da", Focus)) / length(Focus)
ToDadDad <- length(grep("grandpa_da", Focus)) / length(Focus)
Sibling_01 <- makeBaby(Brenda, Alan)
ToSib <- length(intersect(Focus, Sibling_01)) / length(Focus)
ManySiblings <- replicate(1e3, length(intersect(Focus, makeBaby(Brenda, Alan))) / length(Focus))
head(ManySiblings)
quantile(ManySiblings)
mean(ManySiblings)
plot(density(ManySiblings), main="", xlab="proportion shared genes")
HWE <- function(p) {
aa <- p^2
ab <- 2 * p * (1-p)
bb <- (1-p) ^2
return(c(aa=aa, ab=ab, bb=bb))
}
HWE(0.5)
plot(1, 1, type="n", xlim=c(0, 1), ylim=c(0, 1), xlab="freq. allele a", ylab="geno. freq")
p <- seq(from = 0, to = 1, by = 0.01)
GenoFreq <- t(sapply(p, HWE))
lines(p, GenoFreq[,"aa"], lwd=2, col="red")
lines(p, GenoFreq[,"ab"], lwd=2, col="purple")
lines(p, GenoFreq[,"bb"], lwd=2, col="blue")
legend("top", legend=c("aa", "ab", "bb"), col=c("red", "purple", "blue"), lty=1, lwd=2, bty="n")
Pop <- simPop(500)
points(Pop[,"freqa"], Pop[,"Genotypes.aa"]/500, pch=21, bg="red")
Pop <- simPop(50)
points(Pop[,"freqa"], Pop[,"Genotypes.aa"]/50, pch=22, bg="red")
library(learnPopGen)
library(learnPopGen)
library(learnPopGen)
x <- genetic.drift(Ne=200, nrep=5, pause=0.01)
x <- genetic.drift(Ne=50, nrep=5, pause=0.01)
x <- genetic.drift(Ne=1000, nrep=5, pause=0.01)
x <- genetic.drift(Ne=50, nrep=5, pause=0.01)
x <- genetic.drift(Ne=1000, nrep=5, pause=0.01)
x <- genetic.drift(Ne=600, nrep=5, pause=0.01)
PopSizes <- 5:50
Samples <- rep(PopSizes, 5)
tExt <- sapply(Samples, function(x) nrow(simPop(x, 500)))
Line <- lm(tExt ~ Samples)
summary(Line)
Line$coef
plot(Samples, tExt)
abline(Line)
Line2 <- lm(tExt ~ Samples + 0)
abline(Line2)
plot(Samples, tExt)
abline(Line2)
abline(Line)
plot(Samples, tExt)
abline(Line)
Line2 <- lm(tExt ~ Samples + O)
Line2 <- lm(tExt ~ Samples + 0)
abline(Line2)
summary(Line2)
summary(Line)
summary(Line2)
Line$coef
Line2$coef
library(MASS)
robustLine <- rlm(tExt ~ Samples)
abline(robustLine)
summary(robustLine)
robustLine$coef
source("http://jonsmitchell.com/code/reformatData07.R")
source("http://jonsmitchell.com/code/simFxn.R")
plot(1, 1, type="n", xlim=c(1998, 2013), ylim=c(0, 1))
s <- apply(overallFreq, 2, function(x) lines(overallFreq[,1], x, col=rgb(0, 0, 0, 0.01)))
rescaleFreq <- apply(overallFreq[,3:ncol(overallFreq)], 2, function(x) x-x[1])
plot(1, 1, type="n", xlim=c(1998, 2013), ylim=c(-0.25, 0.25))
s <- apply(rescaleFreq, 2, function(x) lines(overallFreq[,1], x, col=rgb(0, 0, 0, 0.01)))
dYear <- c()
dAlleles <- c()
for(i in 3:ncol(overallFreq)) {
dYear <- c(dYear, overallFreq[,1])
Vec <- overallFreq[,i]
Init <- overallFreq[1,i]
dAlleles <- c(dAlleles, Vec-Init)
}
smoothScatter(dYear, dAlleles, colramp=Pal, nbin=100)
smoothScatter(dYear, dAlleles, colramp=Pal, nbin=100, xlab="year", ylab="change in allele freq. since 1998")
addFit(nruns=50, n=100, ngens=18, startT=1997, simCol="gray40", rescale=TRUE)
plot(alleleFreqs$d_freq, alleleFreqs$d_imm, xlim=c(-0.15, 0.15), xlab="overall freq. change", ylab="freq. change in subset")
points(alleleFreqs$d_freq, alleleFreqs$d_birth, col='blue')
points(alleleFreqs$d_freq, alleleFreqs$d_surv, col='red')
addFit(nruns=50, n=100, h=50, s=50, ngens=18, startT=1997, simCol="gray40", rescale=TRUE)
smoothScatter(dYear, dAlleles, colramp=Pal, nbin=100, xlab="year", ylab="change in allele freq. since 1998")
addFit(nruns=50, n=100, h=5, s=5, ngens=18, startT=1997, simCol="gray40", rescale=TRUE)
addFit(nruns=50, n=100, h=0.5, s=0.5, ngens=18, startT=1997, simCol="gray40", rescale=TRUE)
addFit(nruns=50, n=100, h=0.1, s=0.1, ngens=18, startT=1997, simCol="gray40", rescale=TRUE)
smoothScatter(dYear, dAlleles, colramp=Pal, nbin=100, xlab="year", ylab="change in allele freq. since 1998")
addFit(nruns=50, n=100, h=0.1, s=-0.1, ngens=18, startT=1997, simCol="gray40", rescale=TRUE)
smoothScatter(dYear, dAlleles, colramp=Pal, nbin=100, xlab="year", ylab="change in allele freq. since 1998")
addFit(nruns=50, n=50, h=0, s=0, ngens=18, startT=1997, simCol="gray40", rescale=TRUE)
smoothScatter(dYear, dAlleles, colramp=Pal, nbin=100, xlab="year", ylab="change in allele freq. since 1998")
addFit(nruns=50, n=500, h=0, s=0, ngens=18, startT=1997, simCol="gray40", rescale=TRUE)
smoothScatter(dYear, dAlleles, colramp=Pal, nbin=100, xlab="year", ylab="change in allele freq. since 1998")
addFit(nruns=50, n=200, h=0, s=0, ngens=18, startT=1997, simCol="gray40", rescale=TRUE)
smoothScatter(dYear, dAlleles, colramp=Pal, nbin=100, xlab="year", ylab="change in allele freq. since 1998")
addFit(nruns=50, n=200, h=0.1, s=0.1, ngens=18, startT=1997, simCol="gray40", rescale=TRUE)
smoothScatter(dYear, dAlleles, colramp=Pal, nbin=100, xlab="year", ylab="change in allele freq. since 1998")
addFit(nruns=50, n=200, h=-0.1, s=0.1, ngens=18, startT=1997, simCol="gray40", rescale=TRUE)
smoothScatter(dYear, dAlleles, colramp=Pal, nbin=100, xlab="year", ylab="change in allele freq. since 1998")
addFit(nruns=50, n=200, h=1, s=0.1, ngens=18, startT=1997, simCol="gray40", rescale=TRUE)
smoothScatter(dYear, dAlleles, colramp=Pal, nbin=100, xlab="year", ylab="change in allele freq. since 1998")
addFit(nruns=50, n=200, h=1, s=0, ngens=18, startT=1997, simCol="gray40", rescale=TRUE)
smoothScatter(dYear, dAlleles, colramp=Pal, nbin=100, xlab="year", ylab="change in allele freq. since 1998")
addFit(nruns=50, n=175, h=1, s=0, ngens=18, startT=1997, simCol="gray40", rescale=TRUE)
smoothScatter(dYear, dAlleles, colramp=Pal, nbin=100, xlab="year", ylab="change in allele freq. since 1998")
addFit(nruns=50, n=200, h=2, s=0, ngens=18, startT=1997, simCol="gray40", rescale=TRUE)
smoothScatter(dYear, dAlleles, colramp=Pal, nbin=100, xlab="year", ylab="change in allele freq. since 1998")
addFit(nruns=50, n=200, h=4, s=0, ngens=18, startT=1997, simCol="gray40", rescale=TRUE)
smoothScatter(dYear, dAlleles, colramp=Pal, nbin=100, xlab="year", ylab="change in allele freq. since 1998")
addFit(nruns=50, n=200, h=50, s=0, ngens=18, startT=1997, simCol="gray40", rescale=TRUE)
smoothScatter(dYear, dAlleles, colramp=Pal, nbin=100, xlab="year", ylab="change in allele freq. since 1998")
addFit(nruns=50, n=200, h=100, s=0, ngens=18, startT=1997, simCol="gray40", rescale=TRUE)
smoothScatter(dYear, dAlleles, colramp=Pal, nbin=100, xlab="year", ylab="change in allele freq. since 1998")
addFit(nruns=50, n=200, h=0, s=0, ngens=18, startT=1997, simCol="gray40", rescale=TRUE)
smoothScatter(dYear, dAlleles, colramp=Pal, nbin=100, xlab="year", ylab="change in allele freq. since 1998")
addFit(nruns=50, n=200, h=200, s=0, ngens=18, startT=1997, simCol="gray40", rescale=TRUE)
smoothScatter(dYear, dAlleles, colramp=Pal, nbin=100, xlab="year", ylab="change in allele freq. since 1998")
addFit(nruns=50, n=200, h=10000, s=0, ngens=18, startT=1997, simCol="gray40", rescale=TRUE)
smoothScatter(dYear, dAlleles, colramp=Pal, nbin=100, xlab="year", ylab="change in allele freq. since 1998")
addFit(nruns=50, n=150, h=50, s=0, ngens=18, startT=1997, simCol="gray40", rescale=TRUE)
smoothScatter(dYear, dAlleles, colramp=Pal, nbin=100, xlab="year", ylab="change in allele freq. since 1998")
addFit(nruns=50, n=175, h=50, s=0, ngens=18, startT=1997, simCol="gray40", rescale=TRUE)
smoothScatter(dYear, dAlleles, colramp=Pal, nbin=100, xlab="year", ylab="change in allele freq. since 1998")
addFit(nruns=50, n=250, h=50, s=0, ngens=18, startT=1997, simCol="gray40", rescale=TRUE)
smoothScatter(dYear, dAlleles, colramp=Pal, nbin=100, xlab="year", ylab="change in allele freq. since 1998")
addFit(nruns=50, n=225, h=50, s=0, ngens=18, startT=1997, simCol="gray40", rescale=TRUE)
smoothScatter(dYear, dAlleles, colramp=Pal, nbin=100, xlab="year", ylab="change in allele freq. since 1998")
addFit(nruns=50, n=200, h=100000, s=0, ngens=18, startT=1997, simCol="gray40", rescale=TRUE)
smoothScatter(dYear, dAlleles, colramp=Pal, nbin=100, xlab="year", ylab="change in allele freq. since 1998")
addFit(nruns=50, n=150, h=50, s=0, ngens=18, startT=1997, simCol="gray40", rescale=TRUE)
smoothScatter(dYear, dAlleles, colramp=Pal, nbin=100, xlab="year", ylab="change in allele freq. since 1998")
addFit(nruns=50, n=150, h=50, s=0, ngens=18, startT=1997, simCol="gray40", rescale=TRUE)
smoothScatter(dYear, dAlleles, colramp=Pal, nbin=100, xlab="year", ylab="change in allele freq. since 1998")
addFit(nruns=50, n=200, h=50, s=0, ngens=18, startT=1997, simCol="gray40", rescale=TRUE)
smoothScatter(dYear, dAlleles, colramp=Pal, nbin=100, xlab="year", ylab="change in allele freq. since 1998")
addFit(nruns=50, n=175, h=50, s=0, ngens=18, startT=1997, simCol="gray40", rescale=TRUE)
smoothScatter(dYear, dAlleles, colramp=Pal, nbin=100, xlab="year", ylab="change in allele freq. since 1998")
addFit(nruns=50, n=180, h=50, s=0, ngens=18, startT=1997, simCol="gray40", rescale=TRUE)
smoothScatter(dYear, dAlleles, colramp=Pal, nbin=100, xlab="year", ylab="change in allele freq. since 1998")
addFit(nruns=50, n=185, h=50, s=0, ngens=18, startT=1997, simCol="gray40", rescale=TRUE)
smoothScatter(dYear, dAlleles, colramp=Pal, nbin=100, xlab="year", ylab="change in allele freq. since 1998")
addFit(nruns=50, n=185, h=50, s=0, ngens=18, startT=1997, simCol="gray40", rescale=TRUE)
smoothScatter(dYear, dAlleles, colramp=Pal, nbin=100, xlab="year", ylab="change in allele freq. since 1998")
addFit(nruns=50, n=185, h=50, s=0, ngens=18, startT=1997, simCol="gray40", rescale=TRUE)
smoothScatter(dYear, dAlleles, colramp=Pal, nbin=100, xlab="year", ylab="change in allele freq. since 1998")
addFit(nruns=50, n=185, h=50, s=0, ngens=18, startT=1997, simCol="gray40", rescale=TRUE)
source(https://figshare.com/articles/dataset/Allele_frequency_dynamics_in_a_pedigreed_natural_population/7044368?file=13529180)
source(https:/figshare.com/articles/dataset/Allele_frequency_dynamics_in_a_pedigreed_natural_population/7044368?file=13529180)
source(https:figshare.com/articles/dataset/Allele_frequency_dynamics_in_a_pedigreed_natural_population/7044368?file=13529180)
today<-format(Sys.Date(),format="%d%b%Y")
library(plyr)
snplist<-read.table('SNPlist.txt',header=TRUE,stringsAsFactors=FALSE)
setwd("~/Desktop/Evolution/Tasks/Task_08")
text.string <- "(((((((cow, pig), whale), (bat, (lemur, human))), (robin, iguana)), coelacanth), (gold_fish, trout)), shark);"
vert.tree <- read.tree(text=text.string)
library(phytools)
library(ape)
vert.tree <- read.tree(text=text.string)
plot(vert.tree, edge.width=2)
nodelabels(frame="circle", bg='white', cex=1)
vert.tree
str(vert.tree)
tree <- read.tree(text="(((A,B), (C,D)), E);")
plotTree(tree, offset=1)
tiplabels(frame="circle", bg='lightblue', cex=1)
nodelabels(frame="circle", bg='white', cex=1)
tree$tip.label
tree$edge
AnolisTree <- force.ultrametric(read.tree("https://jonsmitchell.com/data/anolis.tre"))
par(las=1)
hist(AnolisTree$edge.length, col='black', border='white', main="", xlab="edge lengths for the Anolis tree", ylim=c(0, 50), xlim=c(0, 6))
tipEdges <- which(AnolisTree$edge[,2] <= Ntip(AnolisTree))
Lengths <- AnolisTree$edge.length
names(Lengths) <- AnolisTree$tip.label
names(Lengths) <- [which(Lengths == min(Lengths))]
names(Lengths) [which(Lengths == min(Lengths))]
names(Lengths)[which(Lengths == min(Lengths))]
plot(AnolisTree, cex=0.25)
Labs <- sapply(AnolisTree$edge.length, round, digits=2)
edgelabels(text=Labs, cex=0.25)
?plot.phylo
tree
plot.phylo(AnolisTree)
plot.phylo(AnolisTree, show.tip.label = FALSE)
plot.phylo(AnolisTree, type=radial)
plot.phylo(AnolisTree, type="radial")
plot.phylo(AnolisTree, tip.color="red")
plot.phylo(AnolisTree, tip.color="red", cex=0.25)
Labs
practice <- rtree(5)
practice
plot.phylo(practice)
names(AnolisTree)[which(AnolisTree == min(Lengths))]
names(Lengths)[which(Lengths == min(Lengths))]
AnolisTree2 <- drop.tip(AnolisTree, "Anolis occultus")
plot.phylo(AnolisTree2)
plot.phylo(AnolisTree2, cex=0.25)
AnolisTree2 <- drop.tip(AnolisTree, "Anolis_occultus")
plot.phylo(AnolisTree2, cex=0.25)
ltt(AnolisTree)
abline(0, 1, lwd=2, col='red', lty=2)
fit.bd(AnolisTree, rho=0.2)
install.packages(treebase)
install.packages(treebase)
install.packages("treebase")
library(treebase)
search_treebase("warblers")
search_treebase("warblers", by="taxon")
install.packages("phylotastic")
install.packages("rotl")
library(rotl)
studies_find_trees(property="ot:ottTaxonName", value="Drosophilae", detailed=FALSE)
studies_find_trees(property="ot:ottTaxonName", value="Drosophila", detailed=FALSE)
FlyStudies <- studies_find_trees(property="ot:ottTaxonName", value="Drosophila", detailed=FALSE)
get_study_tree(FlyStudies)
tree <- get_study_tree(study_id="pg_1144", tree_id="tree2324")
tree
fit.bd(tree)
fit.bd(tree, force.ultrametric())
fit.bd(tree, force.ultrametric)
Question 10 <- ltt(AnolisTree)
Question10 <- ltt(AnolisTree)
pdf(Question10, height=4, width=4)
Question10 <- ltt(AnolisTree)
abline(0, 1, lwd=2, col='red', lty=2)
dev.off()
Question10 <- ltt(AnolisTree)
pdf(Question10, height=4, width=4)
abline(0, 1, lwd=2, col='red', lty=2)
dev.off()
pdf(Question10, height=4, width=4)
Question10 <- ltt(AnolisTree)
abline(0, 1, lwd=2, col='red', lty=2)
dev.off()
setwd("~/Desktop/Evolution/Tasks/Project/Data")
read.csv("/Users/lcb/Desktop/Evolution/finalprojectdata.csv", stringsAsFactors = FALSE)
setwd("~/Desktop/Evolution/Tasks/Project")
read.csv("/Users/lcb/Desktop/Evolution/Tasks/Project/Data/finalprojectdata.csv", stringsAsFactors = FALSE)
ProjectData <- read.csv("/Users/lcb/Desktop/Evolution/finalprojectdata.csv", stringsAsFactors = FALSE)
ProjectData <- read.csv("/Users/lcb/Desktop/Evolution/Tasks/Project/Data/finalprojectdata.csv", stringsAsFactors = FALSE)
head(ProjectData)
setwd("~/Desktop/Evolution/Tasks/Project")
read.csv("/Users/lcb/Desktop/Evolution/Tasks/Project/Data/finalprojectdata.csv", stringsAsFactors = FALSE)
ProjectData <- read.csv("/Users/lcb/Desktop/Evolution/Tasks/Project/Data/finalprojectdata.csv", stringsAsFactors = FALSE)
head(ProjectData)
setwd("~/Desktop/Evolution/Tasks/Project")
read.csv("/Users/lcb/Desktop/Evolution/Tasks/Project/Data/finalprojectdata.csv", stringsAsFactors = FALSE)
ProjectData <- read.csv("/Users/lcb/Desktop/Evolution/Tasks/Project/Data/finalprojectdata.csv", stringsAsFactors = FALSE)
head(ProjectData)
#Data able to be read into R, as far as I can tell.
